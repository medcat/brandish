# encoding: utf-8
# frozen_string_literal: true

Brandish.configure do |config|
  # Sets the root of the brandish documents and output.  This is a path to
  # where the documents are located.  This is its default value.
  config.root = "."

  # Sets the brackets to be used for Brandish documents.  By default, they are
  # the less than and greater than signs, but could be anything, as long as
  # they are two distinct symbols.
  # config[:tags] = %i([ ])

  # A "form".  This is a form of output.  Multiple forms are allowed, with
  # the same formats for each also allowed.
  config.form :html, <%= :"#{options[:name]}_html".inspect %> do |form|
    # `.use` adds a processor to the compilation chain for the document.
    # Each processor updates the AST, changing something about it.  The
    # `all:literal` processor provides the `<literal>` block tag for Brandish.
    # All processors are scoped by a format; if no format is provided, the
    # format for the form is assumed by default.
    form.use :literal
    # The `all:if` processor provides the `<if>` and `<unless>` block tags for
    # Brandish.  It can conditionally include a portion of the text if a
    # set of conditions are met.
    # form.use :if, embed: true # if it should use embeded conditions.
                                # You should only use this if you trust the
                                # source.
    form.use :if
    # `markup` allows the raw text in a document to be parsed as a given
    # markup.
    form.use :markup, engine: :redcarpet
    # This performs error checking of the document, to make sure that no tags
    # in the documents are left over.
    form.use "all:verify"
    # `output` outputs the document in the given format.  This should always
    # be last.
    form.use :output
  end

  # The latex output of the brandish document.
  # config.form :latex, <%= :"#{options[:name]}_latex".inspect %> do |form|
  #  form.use "all:literal"
  #  form.use :markup, engine: :kramdown
  #  form.use :header
  #  form.use "all:verify"
  #  form.use :output
  # end
end